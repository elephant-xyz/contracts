name: Grant Roles (Secure)

# This workflow uses GitHub environments for access control
# Only users with access to the production environment can execute this workflow

on:
  workflow_dispatch:
    inputs:
      network:
        description: "Network to deploy to"
        required: true
        type: choice
        options:
          - polygon
          - amoy
      proxy:
        description: "PropertyDataConsensus proxy address"
        required: true
        type: string
      recipient:
        description: "Address to grant LEXICON_ORACLE_MANAGER_ROLE to"
        required: true
        type: string

# Permissions required for OIDC and checking out code
permissions:
  contents: read
  id-token: write

jobs:
  grant-role:
    name: Grant LEXICON_ORACLE_MANAGER_ROLE
    runs-on: ubuntu-latest
    # Use environment protection rules to control who can run this workflow
    environment: production

    env:
      POLYGON_MAINNET_RPC_URL: ${{ secrets.POLYGON_MAINNET_RPC_URL }}
      AMOY_RPC_URL: ${{ secrets.AMOY_RPC_URL }}
      POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
      KMS_KEY_ID: ${{ secrets.RELEASE_KMS_KEY_ID }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.RELEASE_ROLE }}

    steps:
      - name: Log workflow trigger
        run: |
          echo "Workflow triggered by: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: "us-east-1"

      - name: Install Dependencies
        run: npm ci

      - name: Compile Contracts
        run: npx hardhat compile

      - name: Grant LEXICON_ORACLE_MANAGER_ROLE
        run: |
          echo "Granting LEXICON_ORACLE_MANAGER_ROLE on ${{ inputs.network }}"
          echo "Proxy: ${{ inputs.proxy }}"
          echo "Recipient: ${{ inputs.recipient }}"
          echo "Executed by: ${{ github.actor }}"

          npx hardhat grantLexiconOracleManager \
            --network ${{ inputs.network }} \
            --proxy ${{ inputs.proxy }} \
            --recipient ${{ inputs.recipient }}
